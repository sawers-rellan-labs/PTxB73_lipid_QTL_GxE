library(dplyr)
library(GenomicRanges)
library(ggbio)
library(ggpubr)
cob_wt <- read.csv("GWAS_GxE/Regions_Bare cob weightmeanTemp.csv")
field_wt <- read.csv("GWAS_GxE/Regions_Field weightmeanTemp.csv")
grain_wt <- read.csv("GWAS_GxE/Regions_Grain weight per hectaremeanTemp.csv")
DTA <- read.csv("GWAS_GxE/Regions_Days to anthesismeanTemp.csv")
setwd("~/repos/PTxB73_lipid_QTLxE")
library(dplyr)
library(GenomicRanges)
library(ggbio)
library(ggpubr)
cob_wt <- read.csv("GWAS_GxE/Regions_Bare cob weightmeanTemp.csv")
field_wt <- read.csv("GWAS_GxE/Regions_Field weightmeanTemp.csv")
grain_wt <- read.csv("GWAS_GxE/Regions_Grain weight per hectaremeanTemp.csv")
DTA <- read.csv("GWAS_GxE/Regions_Days to anthesismeanTemp.csv")
cob_wt$trait <- "cob_wt"
field_wt$trait <- "field_wt"
grain_wt$trait <- "grain_wt"
DTA$trait <- "DTA"
library(dplyr)
library(GenomicRanges)
library(ggbio)
library(ggpubr)
install.packages("ggbio")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
BiocManager::install(c("GenomicFeatures", "AnnotationDbi"))
BiocManager::install(c("ggbio", "GenomicRanges"))
install.packages("ggpubr")
library(dplyr)
library(GenomicRanges)
library(ggbio)
library(ggpubr)
cob_wt <- read.csv("GWAS_GxE/Regions_Bare cob weightmeanTemp.csv")
field_wt <- read.csv("GWAS_GxE/Regions_Field weightmeanTemp.csv")
grain_wt <- read.csv("GWAS_GxE/Regions_Grain weight per hectaremeanTemp.csv")
DTA <- read.csv("GWAS_GxE/Regions_Days to anthesismeanTemp.csv")
cob_wt$trait <- "cob_wt"
field_wt$trait <- "field_wt"
grain_wt$trait <- "grain_wt"
DTA$trait <- "DTA"
ob_wt <- cob_wt %>% select(trait,chrom,start,end)
field_wt <- field_wt %>% select(trait,chrom,start,end)
grain_wt <- grain_wt %>% select(trait,chrom,start,end)
DTA <- DTA %>% select(trait,chrom,start,end)
GWAS_GxE <- rbind(cob_wt, field_wt, grain_wt,DTA)
GWAS_GxE$chr <- as.integer(gsub("chr","",GWAS_GxE$chrom))
GWAS_GxE <- GWAS_GxE  %>% arrange(trait, chrom, start)
GWAS_GxE_gr <- GRanges(seqnames= GWAS_GxE$chr,
IRanges(start=GWAS_GxE$start, end = GWAS_GxE$end),
chr = GWAS_GxE$chr,
trait = GWAS_GxE$trait,
lod = -3)
seqlevels(GWAS_GxE_gr) <- as.character(1:10)
GWAS_GxE_gr <- sort(GWAS_GxE_gr)
genome(GWAS_GxE_gr) <- "Zea_mays.AGPv3.22"
biparental_GxE<- read.csv("biparental_GxE/GxE_B73xPT_QTL_intervals_1.csv")
colnames(biparental_GxE)
biparental_GxE$chr
biparental_GxE_gr <- GRanges(seqnames= biparental_GxE$chr,
IRanges(start=biparental_GxE$start, end = biparental_GxE$end),
chr = biparental_GxE$chr,
trait = biparental_GxE$trait,
lod = biparental_GxE$lod)
seqlevels(biparental_GxE_gr) <- as.character(1:10)
biparental_GxE_gr <- sort(biparental_GxE_gr)
genome(biparental_GxE_gr) <- "Zea_mays.AGPv3.22"
gr <- biparental_GxE_gr
df <- data.frame(seqnames=seqnames(gr),
starts=start(gr)-1,
ends=end(gr),
names=gr$trait)
write.table(df, file="interval_association/flower_lipid_QTL_GxE.bed", quote=F, sep="\t", row.names=F, col.names=F)
gr <- NULL
hits <- as.data.frame(GWAS_GxE_gr)[unique(olap$queryHits),]
cob_wt <- cob_wt %>% select(trait,chrom,start,end)
field_wt <- field_wt %>% select(trait,chrom,start,end)
grain_wt <- grain_wt %>% select(trait,chrom,start,end)
DTA <- DTA %>% select(trait,chrom,start,end)
GWAS_GxE <- rbind(cob_wt, field_wt, grain_wt,DTA)
field_wt <- field_wt %>% select(trait,chrom,start,end)
grain_wt <- grain_wt %>% select(trait,chrom,start,end)
DTA <- DTA %>% select(trait,chrom,start,end)
GWAS_GxE <- rbind(cob_wt, field_wt, grain_wt,DTA)
GWAS_GxE$chr <- as.integer(gsub("chr","",GWAS_GxE$chrom))
GWAS_GxE <- GWAS_GxE  %>% arrange(trait, chrom, start)
GWAS_GxE_gr <- GRanges(seqnames= GWAS_GxE$chr,
IRanges(start=GWAS_GxE$start, end = GWAS_GxE$end),
chr = GWAS_GxE$chr,
trait = GWAS_GxE$trait,
lod = -3)
seqlevels(GWAS_GxE_gr) <- as.character(1:10)
GWAS_GxE_gr <- sort(GWAS_GxE_gr)
genome(GWAS_GxE_gr) <- "Zea_mays.AGPv3.22"
biparental_GxE<- read.csv("biparental_GxE/GxE_B73xPT_QTL_intervals_1.csv")
colnames(biparental_GxE)
biparental_GxE$chr
biparental_GxE_gr <- GRanges(seqnames= biparental_GxE$chr,
IRanges(start=biparental_GxE$start, end = biparental_GxE$end),
chr = biparental_GxE$chr,
trait = biparental_GxE$trait,
lod = biparental_GxE$lod)
seqlevels(biparental_GxE_gr) <- as.character(1:10)
biparental_GxE_gr <- sort(biparental_GxE_gr)
genome(biparental_GxE_gr) <- "Zea_mays.AGPv3.22"
gr <- biparental_GxE_gr
df <- data.frame(seqnames=seqnames(gr),
starts=start(gr)-1,
ends=end(gr),
names=gr$trait)
write.table(df, file="interval_association/flower_lipid_QTL_GxE.bed", quote=F, sep="\t", row.names=F, col.names=F)
gr <- NULL
hits <- as.data.frame(GWAS_GxE_gr)[unique(olap$queryHits),]
gr <- GWAS_GxE_gr
df <- data.frame(seqnames=seqnames(gr),
starts=start(gr)-1,
ends=end(gr),
names=gr$trait)
hits_gr<- subsetByOverlaps(GWAS_GxE_gr, biparental_GxE_gr)
View(hits_gr)
chr_GxE <- seqnames(hits_gr)
View(chr_GxE)
chr_GxE <- as.character(chr_GxE@values)
olap <- as.data.frame(findOverlaps(gr, components))
gr <- sortSeqlevels(biparental_GxE_gr)
gr <- sort(gr)
components <- reduce(gr)
olap <- as.data.frame(findOverlaps(gr, components))
View(olap)
values(gr) <- cbind(values(gr), DataFrame(component = olap$subjectHits))
toplot <- as.data.frame(gr)
View(toplot)
View(biparental_GxE)
View(GWAS_GxE)
